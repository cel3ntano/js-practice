{"version":3,"file":"commonHelpers19.js","sources":["../src/js/page-1.js"],"sourcesContent":["//TODO: № 5\nconsole.log('=============Task-5===================');\n//Напишіть функцію logItems(array), яка приймає\n//масив та використовує цикл for, який для кожного\n//елемента масиву виводитиме повідомлення у форматі\n//<номер елемента> - <значення елемента>\n//Нумерація елементів має починатися з першого.\n\nconst array = ['Джаз', 'Блюз', 'Рок-н-рол', 'Реггі', 'Реп'];\n\nfunction logItems(array) {\n  for (let i = 0; i <= array.length - 1; i++) {\n    console.log(`${i + 1} - ${array[i]}`);\n  }\n}\nlogItems(array);\n//\n//TODO: № 6\nconsole.log('=============Task-6===================');\n// Напиши скрипт, який для об'єкта user,\n// Послідовно:\n// 1. додати поле mood зі значенням 'happy'\n// 2. замінити hobby на 'skydiving'\n// 3. замінити значення premium на false\n// 4. виводити зміст об'єкта user у форматі\n// ключ:значення використовуючи Object.keys() і for...of\n//\nconst user = {\n  name: 'John',\n  age: 20,\n  hobby: 'tenis',\n  premium: true,\n};\n\nconst userUpdate = function (user) {\n  user.mood = 'happy';\n  user.hobby = 'skydiving';\n  user.premium = false;\n  const properties = Object.keys(user);\n  for (const property of properties) {\n    console.log(property, user[property]);\n  }\n  return user;\n};\n\nconsole.log(userUpdate(user));\n//\n//TODO: № 7\nconsole.log('=============Task-7===================');\n// В нас є об'єкт, в якому зберігаються зарплати\n// нашої команди.\n// Напишіть код для суми всіх зарплат і\n// Збережіть його результат в змінну sum.\n// Якщо об'єкт salaries пустий, то результат має бути 0\n//\nconst salaries = {\n  Mango: 100,\n  Poly: 160,\n  Ajax: 1470,\n};\n\nconst totalSalary = function (salaries) {\n  let sum = 0;\n  const salaryValues = Object.values(salaries);\n  for (const salary of salaryValues) {\n    sum += salary;\n  }\n  return sum;\n};\n\nconsole.log(totalSalary(salaries));\n//\n//TODO: № 10\nconsole.log('=============Task-10===================');\n// Напиши функцію яка приймає массив чисел і повертає новий массив,\n// унікальних чисел, які не повторюються\n//\nconst numbers = [1, 1, 1, 2, 3, 4, 7, 7, 6, 6, 5, 4, 23, 22, 22, 111, 1, 5];\nconst makeNewArray = function (numbers) {\n  const newArray = [];\n  for (const number of numbers) {\n    if (!newArray.includes(number)) {\n      newArray.push(number);\n    }\n  }\n  return newArray;\n};\nconsole.log(makeNewArray(numbers));\n\nfunction uniqueArray(array) {\n  const uniq = [];\n  for (const number of array) {\n    uniq[number] = number;\n  }\n  return Object.values(uniq);\n}\nconsole.log(uniqueArray(numbers));\n"],"names":["array","logItems","i","user","userUpdate","properties","property","salaries","totalSalary","sum","salaryValues","salary","numbers","makeNewArray","newArray","number","uniqueArray","uniq"],"mappings":"wFACA,QAAQ,IAAI,wCAAwC,EAOpD,MAAMA,EAAQ,CAAC,OAAQ,OAAQ,YAAa,QAAS,KAAK,EAE1D,SAASC,EAASD,EAAO,CACvB,QAASE,EAAI,EAAGA,GAAKF,EAAM,OAAS,EAAGE,IACrC,QAAQ,IAAI,GAAGA,EAAI,CAAC,MAAMF,EAAME,CAAC,CAAC,EAAE,CAExC,CACAD,EAASD,CAAK,EAGd,QAAQ,IAAI,wCAAwC,EASpD,MAAMG,EAAO,CACX,KAAM,OACN,IAAK,GACL,MAAO,QACP,QAAS,EACX,EAEMC,EAAa,SAAUD,EAAM,CACjCA,EAAK,KAAO,QACZA,EAAK,MAAQ,YACbA,EAAK,QAAU,GACf,MAAME,EAAa,OAAO,KAAKF,CAAI,EACnC,UAAWG,KAAYD,EACrB,QAAQ,IAAIC,EAAUH,EAAKG,CAAQ,CAAC,EAEtC,OAAOH,CACT,EAEA,QAAQ,IAAIC,EAAWD,CAAI,CAAC,EAG5B,QAAQ,IAAI,wCAAwC,EAOpD,MAAMI,EAAW,CACf,MAAO,IACP,KAAM,IACN,KAAM,IACR,EAEMC,EAAc,SAAUD,EAAU,CACtC,IAAIE,EAAM,EACV,MAAMC,EAAe,OAAO,OAAOH,CAAQ,EAC3C,UAAWI,KAAUD,EACnBD,GAAOE,EAET,OAAOF,CACT,EAEA,QAAQ,IAAID,EAAYD,CAAQ,CAAC,EAGjC,QAAQ,IAAI,yCAAyC,EAIrD,MAAMK,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,EAAG,CAAC,EACpEC,EAAe,SAAUD,EAAS,CACtC,MAAME,EAAW,CAAA,EACjB,UAAWC,KAAUH,EACdE,EAAS,SAASC,CAAM,GAC3BD,EAAS,KAAKC,CAAM,EAGxB,OAAOD,CACT,EACA,QAAQ,IAAID,EAAaD,CAAO,CAAC,EAEjC,SAASI,EAAYhB,EAAO,CAC1B,MAAMiB,EAAO,CAAA,EACb,UAAWF,KAAUf,EACnBiB,EAAKF,CAAM,EAAIA,EAEjB,OAAO,OAAO,OAAOE,CAAI,CAC3B,CACA,QAAQ,IAAID,EAAYJ,CAAO,CAAC"}